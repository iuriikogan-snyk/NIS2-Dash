name: Build and Deploy to EKS

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY_URI: ${{ secrets.ECR_REPOSITORY_URI }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push backend image
      run: |
        docker build -t $ECR_REPOSITORY_URI/nis2-backend:$IMAGE_TAG -f backend.Dockerfile .
        docker push $ECR_REPOSITORY_URI/nis2-backend:$IMAGE_TAG
        docker tag $ECR_REPOSITORY_URI/nis2-backend:$IMAGE_TAG $ECR_REPOSITORY_URI/nis2-backend:latest
        docker push $ECR_REPOSITORY_URI/nis2-backend:latest
        
    - name: Build, tag, and push frontend image
      run: |
        docker build -t $ECR_REPOSITORY_URI/nis2-frontend:$IMAGE_TAG -f frontend.Dockerfile .
        docker push $ECR_REPOSITORY_URI/nis2-frontend:$IMAGE_TAG
        docker tag $ECR_REPOSITORY_URI/nis2-frontend:$IMAGE_TAG $ECR_REPOSITORY_URI/nis2-frontend:latest
        docker push $ECR_REPOSITORY_URI/nis2-frontend:latest

  deploy:
    name: Deploy to EKS
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Kubeconfig for EKS
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      run: |
        sed -i 's|YOUR_ECR_REPO_URI|${{ env.ECR_REPOSITORY_URI }}|g' k8s/01-deployment.yaml
        kubectl apply -f k8s/
        kubectl rollout restart deployment nis2-backend-deployment
        kubectl rollout restart deployment nis2-frontend-deployment